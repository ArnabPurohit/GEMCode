import FWCore.ParameterSet.Config as cms

SimTrackMatching = cms.PSet(
    gemSimHit = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag('g4SimHits','MuonGEMHits'),
        simMuOnly = cms.bool(True),
        discardEleHits = cms.bool(True),
    ),
    gemDigi = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag("simMuonGEMDigis"),
        minBX = cms.int32(-1),
        maxBX = cms.int32(1),
        matchDeltaStrip = cms.int32(1),
    ),
    gemPad = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag("simMuonGEMCSCPadDigis"),
        minBX = cms.int32(-1),
        maxBX = cms.int32(1),
     ),
    gemCoPad = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag("simMuonGEMCSCPadDigis", "Coincidence"),
        minBX = cms.int32(-1),
        maxBX = cms.int32(1),
    ),
    gemRecHit = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag("gemRecHits"),
        minBX = cms.int32(-1),
        maxBX = cms.int32(1),
        matchDeltaStrip = cms.int32(1),
    ),
    cscSimHit = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag('g4SimHits','MuonCSCHits'),
        simMuOnly = cms.bool(True),
        discardEleHits = cms.bool(True),
    ),
    cscStripDigi = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag("simMuonCSCDigis", "MuonCSCComparatorDigi"),
        minBX = cms.int32(3),
        maxBX = cms.int32(9),
        matchDeltaStrip = cms.int32(1),
    ),
    cscWireDigi = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag("simMuonCSCDigis", "MuonCSCWireDigi"),
        minBX = cms.int32(3),
        maxBX = cms.int32(8),
        matchDeltaWG = cms.int32(1),
    ),
    cscCLCT = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag("simCscTriggerPrimitiveDigis"),
        minBX = cms.int32(3),
        maxBX = cms.int32(9),
        minNHitsChamber = cms.int32(4),
    ),
    cscALCT = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag("simCscTriggerPrimitiveDigis"),
        minBX = cms.int32(3),
        maxBX = cms.int32(8),
        minNHitsChamber = cms.int32(4),
    ),
    cscLCT = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag("simCscTriggerPrimitiveDigis"),
        minBX = cms.int32(3),
        maxBX = cms.int32(8),
        minNHitsChamber = cms.int32(4),
        addGhosts = cms.bool(True),
    ),
    cscMPLCT = cms.PSet(
        verbose = cms.int32(0),
        input = cms.InputTag("simCscTriggerPrimitiveDigis"),
        minBX = cms.int32(3),
        maxBX = cms.int32(8),
        minNHitsChamber = cms.int32(4),
        addGhosts = cms.bool(True),
    ),
    # common
    # SimHit matching
    useCSCChamberTypes = cms.untracked.vint32(0,1,2), 
    verboseSimHit = cms.untracked.int32(0),
    simMuOnlyCSC = cms.untracked.bool(True),
    simMuOnlyGEM = cms.untracked.bool(True),
    discardEleHitsCSC = cms.untracked.bool(True),
    discardEleHitsGEM = cms.untracked.bool(True),
    simInputLabel = cms.untracked.string('g4SimHits'),
    # GEM digi matching:
    verboseGEMDigi = cms.untracked.int32(0),
    gemDigiInput = cms.untracked.InputTag("simMuonGEMDigis"),
    gemPadDigiInput = cms.untracked.InputTag("simMuonGEMCSCPadDigis"),
    gemCoPadDigiInput = cms.untracked.InputTag("simMuonGEMCSCPadDigis", "Coincidence"),
    minBXGEM = cms.untracked.int32(-1),
    maxBXGEM = cms.untracked.int32(1),
    matchDeltaStripGEM = cms.untracked.int32(1),
    # CSC digi matching:
    verboseCSCDigi = cms.untracked.int32(0),
    cscComparatorDigiInput = cms.untracked.InputTag("simMuonCSCDigis", "MuonCSCComparatorDigi"),
    cscWireDigiInput = cms.untracked.InputTag("simMuonCSCDigis", "MuonCSCWireDigi"),
    minBXCSCComp = cms.untracked.int32(3),
    maxBXCSCComp = cms.untracked.int32(9),
    minBXCSCWire = cms.untracked.int32(3),
    maxBXCSCWire = cms.untracked.int32(8),
    matchDeltaStripCSC = cms.untracked.int32(1),
    matchDeltaWireGroupCSC = cms.untracked.int32(1),
    # CSC trigger stubs
    verboseCSCStub = cms.untracked.int32(0),
    cscCLCTInput = cms.untracked.InputTag("simCscTriggerPrimitiveDigis"),
    cscALCTInput = cms.untracked.InputTag("simCscTriggerPrimitiveDigis"),
    cscLCTInput = cms.untracked.InputTag("simCscTriggerPrimitiveDigis"),
    cscMPLCTInput = cms.untracked.InputTag("simCscTriggerPrimitiveDigis"),
    minBXCLCT = cms.untracked.int32(3),
    maxBXCLCT = cms.untracked.int32(9),
    minBXALCT = cms.untracked.int32(3),
    maxBXALCT = cms.untracked.int32(8),
    minBXLCT = cms.untracked.int32(3),
    maxBXLCT = cms.untracked.int32(8),
    minBXMPLCT = cms.untracked.int32(3),
    maxBXMPLCT = cms.untracked.int32(8),
    minNHitsChamber = cms.untracked.int32(4),
    ## GEM RecHit
    gemRecHitInput = cms.untracked.InputTag("gemRecHits")
)
